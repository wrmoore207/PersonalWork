'''
This is a simple program that scrapes a food website and returns a list of recipes from that post. 
This is going to be the basis of the meal plan generator I hope to build.
The meal plan generator will randomly select recipes from the lists generated by this program, 
and return them as a set of 6 tuples (breakfast, snack, lunch, snack, dinner, dessert)
'''

import requests
from bs4 import BeautifulSoup
import random

breakfast = "https://www.eatingwell.com/gallery/8028807/mediterranean-diet-breakfast-recipes-in-10-minutes/"
snacks = "https://www.eatingwell.com/gallery/8054680/anti-inflammatory-mediterranean-diet-snacks/"
lunch = "https://www.eatingwell.com/gallery/8041642/30-days-of-mediterranean-diet-lunches/"
dinner = "https://www.eatingwell.com/gallery/11424/30-days-of-mediterranean-diet-dinners/"
dessert = "https://www.eatingwell.com/gallery/8069625/no-added-sugar-mediterranean-diet-desserts/"

def get_recipes(url):
    # Send an HTTP GET request to the URL
    response = requests.get(url)

    # Check if the request was successful
    if response.status_code == 200:
        # Parse the HTML content of the page
        soup = BeautifulSoup(response.text, 'html.parser')

        # Find and extract the recipe titles
        recipe_titles = []

        # You'll need to inspect the HTML structure and adapt this selector to match the actual structure on the page
        # For example, if recipe titles are in h2 tags, you can do something like this:
        for h2_tag in soup.find_all('h2'):
            title = h2_tag.get_text()
            recipe_titles.append(title)

        return recipe_titles
    else:
        print(f"Failed to retrieve the page. Status code: {response.status_code}")
        return None

breakfast_list = get_recipes(breakfast)
lunch_list = get_recipes(lunch)
dinner_list = get_recipes(dinner)

def pick_recipe(recipe_list):
    # get length of list
    length = len(recipe_list)
    random_number = random.randint(0, length-1)
    return recipe_list[random_number]

def make_day_plan(breakfast_list, lunch_list, dinner_list):
    breakfast = pick_recipe(breakfast_list)
    lunch = pick_recipe(lunch_list)
    dinner = pick_recipe(dinner_list)
    return breakfast, lunch, dinner